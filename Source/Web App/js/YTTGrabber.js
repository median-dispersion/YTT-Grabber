// https://github.com/median-dispersion/YTT-Grabber
class YTTGrabber{#checkThumbnailAvailability(url=""){const minWidth=120;const minHeight=90;return new Promise((resolve,reject)=>{let thumbnail=new Image;thumbnail.onload=function(){if(thumbnail.width*thumbnail.height>minWidth*minHeight){resolve(true)}else{resolve(false)}};thumbnail.onerror=function(){reject(new Error("Something went wrong while loading the thumbnail!"))};thumbnail.src=url})}#getVideoID(url=""){const vidoeHost=["https://www.youtube.com","https://youtube.com","https://m.youtube.com","https://youtu.be","https://www.youtube-nocookie.com"];const videoPath=["/watch?v=","/shorts/","/embed/","/v/","youtu.be/"];if(vidoeHost.some(host=>url.startsWith(host))){videoPath.forEach(path=>url=url.split(path).length>1?url.split(path)[1]:url);const videoID=url.split("?")[0].split("&")[0];if(!videoID){throw new Error("URL doesn't contain a video ID!")}else{return videoID}}else{throw new Error("URL doesn't contain a valid host!")}}getThumbnailURL(url="",format="jpg"){const thumbnailResolution=["maxresdefault","hq720","sddefault","hqdefault","mqdefault","default"];const thumbnailHost="https://i.ytimg.com/vi";return new Promise(async(resolve,reject)=>{try{const videoID=this.#getVideoID(url);let thumbnailURL;for(let i=0;i<thumbnailResolution.length;i++){thumbnailURL=`${thumbnailHost}/${videoID}/${thumbnailResolution[i]}.${format}`;if(await this.#checkThumbnailAvailability(thumbnailURL)){break}}resolve(thumbnailURL)}catch(error){reject(error)}})}}